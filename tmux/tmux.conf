unbind C-b
set -g prefix C-a

set -g default-terminal "$TERM"
set -ag terminal-overrides ",$TERM:Tc"

unbind r
bind r source-file $XDG_CONFIG_HOME/tmux/tmux.conf \; display "Reloaded tmux.conf"

set -sg escape-time 1

set -g mode-keys vi
set -g mouse on

set -g set-titles on
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on

set -g visual-activity off
set -g visual-bell off
set -g visual-silence on
setw -g monitor-activity on
set -g bell-action none

unbind %
unbind "'"
bind - split-window -v -c "#{pane_current_path}"
bind = split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

bind C-a last-window
bind-key b break-pane -d

# bind -r h select-pane -L
# bind -r j select-pane -D
# bind -r k select-pane -U
# bind -r l select-pane -R
# 
# bind -r H resize-pane -L 2
# bind -r J resize-pane -D 2
# bind -r K resize-pane -U 2
# bind -r L resize-pane -R 2

# Theme

theme_bg="#192330"
theme_fg="#cdcecf"
theme_black="#393b44"
theme_red="#c94f6d"
theme_green="#81b29a"
theme_yellow="#dbc074"
theme_blue="#719cd6"
theme_magenta="#9d79d6"
theme_cyan="#63cdcf"
theme_white="#dfdfe0"

set -g status-position bottom
set -g status "on"
set -g status-bg "${theme_bg}"
set -g status-justify "left"
set -g status-left-length "100"
set -g status-right-length "100"
set -g status-interval 1

set -g message-style fg="${theme_cyan}",bg="${theme_bg}",align="centre"
set -g message-command-style fg="${theme_cyan}",bg="${theme_bg}",align="centre"

set -g pane-border-style "fg=#{$theme_gray}"
set -g pane-active-border-style "fg=#{$theme_blue}"

setw -g window-status-activity-style fg="${theme_fg}",bg="${theme_bg}",none
setw -g window-status-separator ""
setw -g window-status-style fg="${theme_fg}",bg="${theme_bg}",none

set -g status-left ""
set -g status-right "#{?client_prefix,#[bg=$theme_red],#[bg=$theme_green]} > #[bg=$theme_yellow] #S "

setw -g window-status-format "#[fg=$theme_bg,bg=$theme_yellow] #I #[fg=$theme_fg,bg=$theme_bg] #W#F "
setw -g window-status-current-format "#[fg=$theme_bg,bg=$theme_green] #I #[fg=$theme_fg,bg=$theme_bg] #W#F "

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

# decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+
